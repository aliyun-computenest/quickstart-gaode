Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: amap-
    SupplierDeployMetadata:
      ArtifactRelation:
        'centos_7':
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: 单机版
        Url: 'ros_templates/template.yaml'
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: amap server deploy
    Image: 'resources/icons/service_logo.png'
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: amap
    Description: amap
    ArtifactProperty:
      RegionId: ${ImageBuilder.EcsImage.RegionId}
      ImageId: ${ImageBuilder.EcsImage.SourceImageId}
ImageBuilder:
  EcsImage:
    RegionId: ap-southeast-1
    SourceImageId: ubuntu_24_04_x64_20G_alibase_20250317.vhd
    SystemDiskSize: 40
    InstanceType: ecs.c6.large
    InternetMaxBandwidthOut: 10
    CommandType: RunShellScript
    Timeout: 10800
    Tags: [ ]
    CommandContent: |-
        # 安装docker-ce
        apt-get update
        apt-get -y install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu/gpg | apt-key add -
        add-apt-repository -y "deb [arch=$(dpkg --print-architecture)] http://mirrors.cloud.aliyuncs.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
        apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        sudo systemctl enable --now docker.service

        git clone https://github.com/open-webui/mcpo.git
        cd /root/mcpo

        sed -i 's/CMD \["--help"\]/CMD ["--config", ".\/config.json", "--port", "8000", "--host", "0.0.0.0"]/g' Dockerfile

        cat > /root/mcpo/config.json << EOF
        {
          "mcpServers": {
            "amap-maps": {
              "command": "npx",
              "args": ["-y", "@amap/amap-maps-mcp-server"],
              "env": {
                "AMAP_MAPS_API_KEY": ""
              }
            }
          }
        }
        EOF

        cat > /root/mcpo/docker-compose.yml << "EOF"
        services:
          open-webui:
            image: ghcr.io/open-webui/open-webui:latest
            container_name: open-webui
            volumes:
              - open-webui:/app/backend/data
            ports:
              - 8080:8080
            extra_hosts:
              - host.docker.internal:host-gateway
            restart: unless-stopped
            environment:
              - 'ENABLE_OPENAI_API=True'
              - 'ENABLE_OLLAMA_API=False'
              - 'OPENAI_API_BASE_URL=https://dashscope.aliyuncs.com/compatible-mode/v1'
              - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
          mcpo-service:
            build: .
            ports:
              - "8000:8000"
            volumes:
              - ./config.json:/app/config.json
            restart: unless-stopped
        volumes:
          ollama: {}
          open-webui: {}
        EOF
        docker compose up -d
